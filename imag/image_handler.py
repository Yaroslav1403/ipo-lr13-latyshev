from PIL import Image  #Импортируем модуль Image из библиотеки PIL для работы с изображениями

class ImageHandler:  #Определяем класс ImageHandler для обработки изображений
    def __init__(self, image_path):  #Метод инициализации класса
        self.image_path = image_path  #Сохраняем путь к изображению
        self.image = None  #Инициализируем переменную для хранения изображения

    def load_image(self):  #Метод для загрузки изображения
        """Загружает изображение из указанного пути."""  #Описание метода
        self.image = Image.open(self.image_path)  #Открываем изображение по указанному пути
        print(f"Изображение {self.image_path} загружено.")  #Выводим сообщение о загрузке изображения

    def save_image(self, save_path):  #Метод для сохранения изображения
        """Сохраняет изображение по указанному пути."""  #Описание метода
        if self.image is not None:  #Проверяем, загружено ли изображение
            self.image.save(save_path)  #Сохраняем изображение по указанному пути
            print(f"Изображение сохранено как {save_path}.")  #Выводим сообщение о сохранении изображения
        else:
            print("Ошибка: Изображение не загружено.")  #Выводим сообщение об ошибке, если изображение не загружено

    def resize_image(self, max_size=(200, 200)):  #Метод для изменения размера изображения
        """Изменяет размер изображения, сохраняя пропорции."""  #Описание метода
        if self.image is not None:  #Проверяем, загружено ли изображение
            self.image.thumbnail(max_size)  #Изменяем размер изображения до максимального размера, сохраняя пропорции
            print(f"Изображение изменено до размера {max_size}.")  #Выводим сообщение об изменении размера изображения
        else:
            print("Ошибка: Изображение не загружено.")  #Выводим сообщение об ошибке, если изображение не загружено

    def get_image(self):  #Метод для получения текущего изображения
        """Возвращает текущее изображение."""  #Описание метода
        return self.image  #Возвращаем текущее изображение
